#summary How to install XMPPJCA
#labels Phase-Deploy,Featured

== Dependencies ==

Please make sure that you have the following software already installed on your machine.

  * [http://java.sun.com Java 5] (or greater)
  * [http://ant.apache.org ANT 1.7] (or greater)
  * [https://glassfish.dev.java.net GlassFish V2] 
  * [http://www.eclipse.org Eclipse IDE for Java EE Developers (version 3.3)] (optional) 

== Steps to Follow ==

To work with XMPPJCA, you will need to build and deploy both the resource adapter (.rar file) and an enterprise application (.ear file) onto your GlassFish server. But first you will need to check-out the XMPPJCA project from SVN (hosted by Google Code). 

=== Step 1 - Check-out the source code ===

To check-out the source code, refer to the [http://code.google.com/p/xmppjca/source/checkout SVN repository check-out instructions], or have a look at the screenshots below showing how you can add the repository and then check-out the project from within Eclipse using the [http://www.polarion.org/index.php?page=overview&project=subversive Polarion Subversive SVN plugin].

* Figure 1: Add the SVN repository location to your workspace *

http://xmppjca.googlecode.com/files/xmppjca-svn-repository.png

* Figure 2: Check out the 'grapevineim-xmpp' project from 'trunk' *

http://xmppjca.googlecode.com/files/xmppjca-svn-check-out.png

Your file structure will look something like Figure 3 below. 

* Figure 3: Project structure *

http://xmppjca.googlecode.com/files/xmppjca-project-structure.png

If it's not compiling, check to make sure that your GlassFish server runtime library reference (part of your project Build Path) is bound to the actual location of your GlassFish instance on your machine.

* Figure 4: If compilation check to make sure that your GlassFish runtime bound to proper location on your machine. *

http://xmppjca.googlecode.com/files/xmppjca-project-glassfish-unbound.png

=== Step 2 - Build The Resource Adapter (.rar) ===

  # Now that you have check-out the code, go to the project's root directory and create a file called project.properties. The contents of your file will contain project specific information to build everything as well as login credentials for the XMPP messaging server. Here is the set of properties that you will need to define:
  {{{
  # fully qualified path to your project files
  project.home=C:\\eclipse\\workspace\\grapevineim-xmpp

  # fully qualified path to your glassfish installation
  project.j2ee.home=C:\\glassfish

  # XMPP server hostname
  project.xmpp.host=talk.google.com

  # XMPP server port
  project.xmpp.port=5222

  # XMPP server domain name for user account
  project.xmpp.domain=gmail.com

  # XMPP login username
  project.xmpp.username=ENTER_YOUR_USERNAME_HERE

  # XMPP login password
  project.xmpp.password=ENTER_YOUR_PASSWORD_HERE
  }}}

* Figure 5: project.properties file contents *

http://xmppjca.googlecode.com/files/xmppjca-project-properties.png

  # Assuming 'javac' and 'ant' are in your PATH, run the main build file by executing the following command

  {{{ 
  ant -f build.xml all 
  }}} 

  or simply 

  {{{ 
  ant 
  }}}
 
=== Step 3 - The Enterprise Application (.ear) ===

  # blah 
  # blah
  # blah